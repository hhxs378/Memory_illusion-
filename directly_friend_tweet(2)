import tweepy
import unicodecsv
import sys
from datetime import timedelta, date
from twython import Twython
from time import sleep

# Twitter Credentials

consumer_key = 'cGU6NcUYBo2luyEXzR8rUoior'
consumer_secret = '12cLuRI1Mi7UjhPFhEpsD7X0LX2CMnRG6HBzP6v9HxIPkt7DQk'
access_key = '2189941820-o8rGBs5JaiZ6mrWt0tdRCkrZiq2zSNpexIYWsxr'
access_secret = 'BtgnVyWSQ2XiDc59iR4bneFmTrDJ32y3FUf5TkEygyPzI'

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_key, access_secret)

api = tweepy.API(auth)

# import GetOldTweet to scrape old tweet
if sys.version_info[0] < 3:
    import GetOldTweets3
else:
    import GetOldTweets3 as got



# user name
def main():
    users = ["wintwriscoming"]
    #user_dict, user_id2name = get_user_id(users)
    user_dict ={"wintwriscoming":["JoJoFromJerz","latinorebels","AlejandroSanz","RobAnderson2018","GretaThunberg","Sky_Lee_1","GRRMspeaking","susiedrapes","IbraheemSamirah","AlexandraChalup"
,"phyllisj1003"]}
    user_id2name ={"wintwriscoming": "wintwriscoming"}
    get_friends_twweet(users, user_dict, user_id2name)
    tweet_info=[]


# ~~~~ functions ~~~~
# period for search
def daterange(date1, date2):
    for n in range(int((date2 - date1).days) + 1):
        yield date1 + timedelta(n)

max_friends_to_look_up = 1
# get_user_information
def get_user_id(users):
    user_dict = {}
    user_id2name = {}

    for user in users:
        user_obj = api.get_user(user)

        #userFriends_id = api.friends_ids(user)

       #
        # user_info.append([user_obj.name, user_obj.friends_count])

    return user_dict, user_id2name

#get_friends_tweet
def get_friends_twweet(users, user_dict, user_id2name):
    date_list = []
    start_dt = date(2019, 3, 30)
    end_dt = date(2019, 3, 31)  # get 08-01 to  09-15
    for dt in daterange(start_dt, end_dt):
        date_list.append(dt.strftime("%Y-%m-%d"))

    max_tweets_per_day = 20
    friend_tweets = {}

    for user in users:
        for friend in list(user_dict[user]):
            tmp_tweets = []
            for i in range(len(date_list) - 1):

                tweetCriteria = got.manager.TweetCriteria().setUsername(friend) \
                    .setSince(date_list[i]) \
                    .setUntil(date_list[i + 1]) \
                    .setMaxTweets(max_tweets_per_day)

                tweets = got.manager.TweetManager.getTweets(tweetCriteria)

                W#tmpTweets = api.user_timeline(friend)


                for tw in tweets:
                    tmp_tweets.append(tw.text)

                    tweet_info = [tw.created_at.hour]
                #
                if i % 1 == 0:
                    print("user: {}, friend: {}, iter: {:4d};  {} data processed".format(user, friend, i, date_list[i]))


            friend_tweets[(user, friend)] = tmp_tweets

            write_list = []
            for tup in list(friend_tweets.keys()):
                for tw in friend_tweets[tup]:
                     write_list.append([tup[0], user_id2name[tup[0]], len(user_dict[tup[0]]), tup[1], tw,dt,tweet_info])
            write_to_csv(write_list)
            sleep(1)

# open cvs file
def write_to_csv(lst):
    with open('follower_tweet.csv','wb')  as file :
        writer = unicodecsv.writer(file, delimiter =',', quotechar ='"')
        writer.writerow(["userID", "userName", "#of_following","friend_ID","friend_tweet","date"])
        for line in lst:
            writer.writerow(line)



#print ("done")
if __name__ == '__main__':
    main()
